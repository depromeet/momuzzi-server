worker_processes auto;       

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Docker DNS resolver 설정
    resolver 127.0.0.11 valid=30s ipv6=off;

    sendfile on;
    keepalive_timeout 65;
    
    upstream docker_registry {
        server registry:5000;
    }

    upstream registry-web {
        server registry-web:8080;
    }

    upstream jenkins {
        server jenkins:8080;
    }

    server {
        listen 0.0.0.0:80;
        server_name registry.momuzzi.site jenkins.momuzzi.site localhost;
        
        # nginx-exporter용 stub_status (리다이렉트 제외)
        location /stub_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker 네트워크
            deny all;
        }
        
        # 다른 모든 경로는 HTTPS로 리다이렉트
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Jenkins CI/CD Server
    server {
        listen 0.0.0.0:443 ssl;
        server_name jenkins.momuzzi.site;

        ssl_certificate /etc/letsencrypt/live/jenkins.momuzzi.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/jenkins.momuzzi.site/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://jenkins;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_redirect off;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_read_timeout 90;
            proxy_send_timeout 90;

            client_max_body_size 100m;
        }
    }

    # Docker Registry
    server {
        listen 0.0.0.0:443 ssl;
        server_name registry.momuzzi.site;

        ssl_certificate /etc/letsencrypt/live/registry.momuzzi.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/registry.momuzzi.site/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        add_header Docker-Distribution-Api-Version "registry/2.0" always;

        location /v2/ {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_request_buffering off;

            proxy_read_timeout 900;
            proxy_send_timeout 900;

            proxy_pass http://docker_registry/v2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;

            proxy_set_header Authorization $http_authorization;
            proxy_pass_request_headers on;

            client_max_body_size 0;
            chunked_transfer_encoding on;
        }

        location / {
            auth_basic "Docker Registry Web";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://registry-web/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}