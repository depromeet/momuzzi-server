server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker 컨테이너 로그 수집
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    
    relabel_configs:
      # 컨테이너 이름
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      
      # 컨테이너 ID
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'
      
      # 이미지 이름
      - source_labels: ['__meta_docker_container_image']
        target_label: 'image'
      
      # Docker Compose 서비스 이름
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      
      # 프로젝트 이름
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
      
      # 로그 파일 경로
      - source_labels: ['__meta_docker_container_id']
        target_label: '__path__'
        replacement: '/var/lib/docker/containers/$1/*.log'
    
    # Docker JSON 로그 파싱
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
      
      # 타임스탬프 파싱
      - timestamp:
          source: time
          format: RFC3339Nano
      
      # 로그 내용 추출
      - output:
          source: output
      
      # 불필요한 로그 필터링 (Drop)
      - match:
          selector: '{container="nginx"}'
          stages:
            # 301 리다이렉트 로그 제외
            - drop:
                expression: '.*" 301 .*'
            
            # /stub_status 메트릭 수집 로그 제외
            - drop:
                expression: '.*GET /stub_status.*'
            
            # Grafana 로그인 및 API 요청 제외
            - drop:
                expression: '.*monitoring\.momuzzi\.site.*(GET /login|GET /api/|POST /api/|GET /avatar/|GET /public/).*'
            
            # GitHub Webhook 로그 제외
            - drop:
                expression: '.*(jenkins\.momuzzi\.site.*github-webhook|/github-webhook/).*'
            
            # Let's Encrypt ACME challenge 로그 제외
            - drop:
                expression: '.*\.well-known/acme-challenge.*'
            
            # 헬스체크 로그 제외 (있는 경우)
            - drop:
                expression: '.*(GET /health|GET /actuator/health).*'
      
      # 정적 라벨 추가
      - labels:
          environment: production
